@page "/edit-intern/{Id:int}"
@using task_for_66bit.Data.Models
@using task_for_66bit.Services
@using Microsoft.AspNetCore.Components.Forms
@inject NavigationManager NavigationManager
@inject InternService InternService
@inject DirectionService DirectionService
@inject ProjectService ProjectService

<h3>Edit Intern</h3>

@if (_intern == null)
{
    <p>Loading...</p>
}
else
{
    <EditForm Model="@_intern" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label>Имя (*)</label>
            <InputText class="form-control" @bind-Value="_intern.FirstName" />
            <ValidationMessage For="@(() => _intern.FirstName)" />
        </div>

        <div class="form-group">
            <label>Фамилия (*)</label>
            <InputText class="form-control" @bind-Value="_intern.LastName" />
            <ValidationMessage For="@(() => _intern.LastName)" />
        </div>

        <div class="form-group">
            <label>Пол (*)</label>
            <InputSelect class="form-control" @bind-Value="_intern.Gender">
                <option value="Male">М</option>
                <option value="Female">Ж</option>
            </InputSelect>
            <ValidationMessage For="@(() => _intern.Gender)" />
        </div>

        <div class="form-group">
            <label>Почта (*)</label>
            <InputText class="form-control" @bind-Value="_intern.Email" />
            <ValidationMessage For="@(() => _intern.Email)" />
        </div>

        <div class="form-group">
            <label>Номер телефона</label>
            <InputText class="form-control" @bind-Value="_intern.PhoneNumber" />
            <ValidationMessage For="@(() => _intern.PhoneNumber)" />
        </div>

        <div class="form-group">
            <label>Дата рождения (*)</label>
            <InputDate class="form-control" @bind-Value="_intern.DateOfBirth" />
            <ValidationMessage For="@(() => _intern.DateOfBirth)" />
        </div>

        <div class="form-group">
            <label>Direction (*)</label>
            <InputSelect class="form-control" @bind-Value="_intern.DirectionId">
                <option value="">Выберите направление</option>
                @foreach (var direction in _directions)
                {
                    <option value="@direction.Id">@direction.Name</option>
                }
            </InputSelect>
            <ValidationMessage For="@(() => _intern.DirectionId)" />
        </div>

        <div class="form-group">
            <label>Проект (*)</label>
            <InputSelect class="form-control" @bind-Value="_intern.ProjectId">
                <option value="">Выберите проект</option>
                @foreach (var project in _projects)
                {
                    <option value="@project.Id">@project.Name</option>
                }
            </InputSelect>
            <ValidationMessage For="@(() => _intern.ProjectId)" />
        </div>

        <button type="submit" class="btn btn-primary">Сохранить</button>
        <button class="btn btn-secondary" @onclick="() => Cancel()">Отмена</button>
        </EditForm>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private Intern? _intern;
    private List<Direction> _directions = new();
    private List<Project> _projects = new();

    protected override async Task OnInitializedAsync()
    {
        try 
        {
            _intern = await InternService.GetInternByIdAsync(Id);
            _directions = (await DirectionService.GetAllDirectionsAsync()).Directions.ToList();
            _projects = (await ProjectService.GetAllProjectsAsync()).Projects.ToList();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading intern: {ex.Message}");
        }
    }

    private async Task HandleValidSubmit()
    {
        try
        {
            await InternService.UpdateInternAsync(_intern!);
            NavigationManager.NavigateTo("/interns");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Update error: {ex.Message}");
        }
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo("/interns");
    }
}