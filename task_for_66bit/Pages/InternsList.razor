@page "/interns"
@using Microsoft.AspNetCore.Components.Web
@using task_for_66bit.Data.Models
@using task_for_66bit.Services
@inject NavigationManager NavigationManager
@inject InternService InternService

<h3>Interns List</h3>

<button @onclick="TestClick">Test Click</button>

<select @bind="selectedFilter">
    <option value="">All</option>
    <option value="John">John</option>
    <option value="Jane">Jane</option>
</select>

<table>
    <thead>
    <tr>
        <th>Name</th>
        <th>Email</th>
        <th>Phone</th>
        <th>Actions</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var intern in filteredInterns)
    {
        <tr>
            <td>@intern.FirstName @intern.LastName</td>
            <td>@intern.Email</td>
            <td>@intern.PhoneNumber</td>
            <td>
                <button @onclick="() => EditIntern(intern)">Edit</button>
                <button @onclick="() => DeleteIntern(intern.Id)">Delete</button>
            </td>
        </tr>
    }
    </tbody>
</table>

@code {
    private List<Intern> interns = new();
    private List<Intern> filteredInterns = new();
    private string selectedFilter = "";

    protected override async Task OnInitializedAsync()
    {
        interns = (await InternService.GetAllInternsAsync()).ToList();
        filteredInterns = interns.ToList();
    }

    private void ApplyFilter()
    {
        if (string.IsNullOrEmpty(selectedFilter))
        {
            filteredInterns = interns.ToList();
        }
        else
        {
            filteredInterns = interns
                .Where(i => i.FirstName.Contains(selectedFilter, StringComparison.OrdinalIgnoreCase))
                .ToList();
        }
    }

    private void TestClick()
    {
        Console.WriteLine("TEST CLICK WORKED!");
    }

    private void EditIntern(Intern intern)
    {
        Console.WriteLine($"Editing intern: {intern.Id}");
        NavigationManager.NavigateTo($"/edit-intern/{intern.Id}");
    }

    private async Task DeleteIntern(int id)
    {
        Console.WriteLine($"Deleting intern: {id}");
        await InternService.DeleteInternAsync(id);
        interns = (await InternService.GetAllInternsAsync()).ToList();
        filteredInterns = interns.ToList();
    }
}